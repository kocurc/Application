name: Print repository info

on: 
    repository_dispatch:
        types:
            - webhook
    workflow_dispatch:
        inputs:
            info-type:
                description: "Print repository info type"
                required: true
                type: choice
                options:
                    - basic
                    - extended
env: 
    continue: true

jobs:
    print-repository-info:
        if: github.event != 'repository_dispatch'
        runs-on: ubuntu-latest
        steps:
            - name: Print repository info
              continue-on-error: ${{ fromJson(env.continue) }}
              run: |
                echo "Print basic repository info"

                echo -e "Action: ${{ github.action}}\n" \
                        "Action's path: ${{ github.action_path}}\n" \
                        "Action's reference: ${{ github.action_ref}}\n" \
                        "Action's repository: ${{ github.action_repository}}\n" \
                        "Actor: ${{ github.actor}}\n" \
                        "Actor's ID: ${{ github.actor_id}}\n" \
                        "API's URL: ${{ github.api_url}}\n" \
                        "Base reference: ${{ github.base_ref}}\n" \
                        "Environment: ${{ github.env}}\n" \
                        "*Environment: ${{ github.event}}\n" \
                        "Event's name: ${{ github.event_name}}\n" \
                        "Event's path: ${{ github.event_path}}\n" \
                        "GraphQL's URL: ${{ github.graphql_url}}\n" \
                        "Head's reference: ${{ github.head_ref}}\n" \
                        "Job: ${{ github.job}}\n" \
                        "Job's SHA: ${{ github.job_workflow_sha}}\n" \
                        "Path: ${{ github.path}}\n" \
                        "Reference: ${{ github.ref}}"

                case ${{ github.event.inputs.info-type }} in
                    extended)
                        echo "Print ${{ github.event.inputs.info-type }} repository info"

                        echo -e "Event's installation ID: ${{ github.event.installation.id}}\n" \
                                "Event's installation ID: ${{ github.event.installation.id}}\n" \n
                                "Event's installation node ID: ${{ github.event.installation.node_id}}\n" \n
                                "Event's workflow: ${{ github.event.workflow}}"
                        ;;
                    *)
                        echo "Unsupported info-type"
                        ;;
                esac
              shell: powershell
    set-variables:
        runs-on: ubuntu-latest
        steps:
            - name: Set an extra environment variable
              run: |
                echo "EXTRA_ENV=extra environment variable" >> $GITHUB_ENV
            - name: Add an extra PATH value
              run: |
                echo "~/" >> $GITHUB_PATH
            - name: Set an output parameter
              id: output_step
              run: |
                echo "extra_output=extra output parameter" >> $GITHUB_OUTPUT
            - name: Read environment variables
              run: |
                echo $GITHUB_ENV
            - name: Read the PATH values
              run: |
                echo $GITHUB_PATH
            - name: Read the added output parameter's value
              run: |
                echo "The added output parameter's value ${{ steps.output_step.outputs.extra_output }}"
    read-variables:
        env:
            EVENT_ENV: ${{ github.event_name}}
        runs-on: ubuntu-latest
        steps:
            - name: Read environment variables
              run: |
                echo "::group::Reading \$GITHUB_ENV variables"
                echo $GITHUB_ENV
                echo "::endgroup::"
            - name: Read the PATH values
              run: |
                echo $GITHUB_PATH
            - name: Read the added output parameter's value
              run: |
                echo "The added output parameter's value ${{ steps.output_step.outputs.extra_output }}"
            - name: Complete workflow
              run: |
                echo "::add-mask::An actor's name: ${{ github.actor }}"
                echo "The workflow's event: $EVENT_ENV"
                echo "::debug::A debug process completion"
            