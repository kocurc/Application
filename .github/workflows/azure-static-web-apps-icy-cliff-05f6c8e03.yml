name: Azure Static Web Apps CI/CD

on:
  push:
    branches:
      - master

jobs:
  check-deploy-condition:
    runs-on: ubuntu-latest
    outputs:
      should_run_deploy: ${{ steps.set_deploy_output.outputs.should_run_deploy }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
      
    - name: Get changed files
      id: changed_files
      run: |
        git diff --name-only ${{ github.event.before }} ${{ github.sha }} > changed_files.txt

    - name: Check if documentation folder was changed
      id: documentation-folder
      run: |
        if grep --quiet '^documentation' changed_files.txt; then
          echo "was_documentation_folder_changed=true" >> $GITHUB_OUTPUT
        else
          echo "was_documentation_folder_changed=false" >> $GITHUB_OUTPUT
        fi
    
    - name: Check if XML documentation comments were changed
      id: documentation-comments
      run: |
        echo "were_documentation_comments_changed=false" >> $GITHUB_OUTPUT
        echo "Changed files:\n$(cat changed_files.txt)"

        while read -r changed_file; do
          if grep --quiet '^\s*///' "$changed_file"; then
            echo "were_documentation_comments_changed=true" >> $GITHUB_OUTPUT
            break
          fi
        done < changed_files.txt

    - name: Set deploy output
      id: set_deploy_output
      run: |
        if [ "${{ steps.documentation-folder.outputs.was_documentation_folder_changed }}" = "true" ] || [ "${{ steps.documentation-comments.outputs.were_documentation_comments_changed }}" = "true" ]; then
          echo "should_run_deploy=true" >> $GITHUB_OUTPUT
        else
          echo "should_run_deploy=false" >> $GITHUB_OUTPUT
        fi

  build-and-deploy-job:
    needs: check-deploy-condition
    if: needs.check-deploy-condition.outputs.should_run_deploy == 'true'
    runs-on: ubuntu-latest
    name: Build and Deploy Job
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: true
          lfs: false

      - name: Setup .NET 9 SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.0.x

      - name: Restore dotnet tools
        run: dotnet tool restore

      - name: Restore projects
        run: dotnet restore

      - name: Build projects
        run: dotnet build --no-restore

      - name: Generate metadata
        run: dotnet tool run docfx metadata ./documentation/docfx.json

      - name: Build DocFX
        run: dotnet tool run docfx build ./documentation/docfx.json

      - name: Install OIDC Client from Core Package
        run: npm install @actions/core@1.6.0 @actions/http-client

      - name: Get ID token
        uses: actions/github-script@v7.0.1
        id: idtoken
        with:
          script: |
            const coredemo = require('@actions/core')
            return await coredemo.getIDToken()
          result-encoding: string

      - name: Build and deploy
        id: builddeploy
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_ICY_CLIFF_05F6C8E03 }}
          action: "upload"
          app_location: "documentation/"
          api_location: ""
          output_location: "documentation/"
          github_id_token: ${{ steps.idtoken.outputs.result }}
          skip_app_build: true
